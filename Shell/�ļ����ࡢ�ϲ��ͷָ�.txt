1.s o r t命令的一般格式为：
sort -cmu -o output_file [other options] +pos1 +pos2 input_files
s o r t的参数：
-c 测试文件是否已经分类。
-m 合并两个分类文件。
-u 唯一性（不重复）分类以去除重复行
-o 存储s o r t结果的输出文件名。
-b 使用域进行分类时，忽略第一个空格（使用此参数必须同时指定排序的域号+n，否则-b参数失效）。
-t 域分隔符；用非空格或t a b键分隔域。
-r 对分类次序或比较求逆，即逆向分类结果（降序）。
+n n为域号。使用此域号开始分类。
-n n为域号。在分类比较时忽略此域，一般与+ n一起使用。
-g 按科学记数法(scientific notation)排序
-k post1[,post2] 排序主键从post1开始到post2止；例如4，6意即以第5个字段开始，到第7个字段止。
可以用下面这些选项来进一步修改排序算法：
-d（只将字母、数字和空白用作排序键）、
-f（关闭大小写区分，认为小写和大写字符是一样的）、
-i（忽略非打印的 ASCII 字符）、
-M（使用三个字母的月份名称缩写：JAN、FEB、MAR … 来对行进行排序）
这些选项以及 -b 和 -r 选项可以用作键编号的一部分，
在这种情况下，它们只适用于该键而非全局，其作用就跟在键定义外使用它时一样。

sort对域的参照方式
关于s o r t的一个重要事实是它参照第一个域作为域0，域1是第二个域，等等。s o r t也可以使用整行作为分类依据。

sort -t: +3nr file  以：为分隔符对第4个字段降序排序（若为数值分类，可以使用- n选项，如果不用-n选项，只查看每个数值的第一个
数，并按其分类，然后再按第二个数依次下去。）
sort +0 -2 +3 file 开始以域0分类，忽略域2，然后再使用域3分类
sort -t: -k4 -k1  file 先以第4域，再以第1域分类
sort -k 3.4,4.5 -k 7.3,9.4 file 对行进行排序时，使用从第 3 域的第 4 个字符开始到第 4 域的第 5 个字符结束的键，
然后再采用从第 7 域的第 3 个字符到第 9 域的第 4 个字符结束的键

sort +field_number.characters_in
意即从f i e l d _ n u m b e r开始分类，但是要在此域的第c h a r a c t e r s _ i n个字符开始。
sort -t: +1.2 file  以：为分隔符对第2个字段最左边第3个字符开始分类
为了更好地进行控制，可以使用键和偏移量。偏移量是用点与键相分隔的，
比如在 -k 1.3,5.7 中，表示排序键应当从第 2 个字段的第 4 个字符开始，
到第 6 个字段的第 8 个字符结束。

2.uniq用法
u n i q用来从一个文本文件中去除或禁止重复行。一般u n i q假定文件已分类，并且结果正确。（必须先sort）
我们并不强制要求这样做，如果愿意，可以使用任何非排序文本，甚至是无规律行。
可以认为u n i q有点像s o r t命令中唯一性选项。对，在某种程度上讲正是如此，但两者有一个重要区别。s o r t的唯一性选项去除
所有重复行，而u n i q命令并不这样做。重复行是什么？在u n i q里意即持续不断重复出现的行，中间不夹杂任何其他文本，现举例
如下：
$ cat myfile.txt
May Day
May Day
May Day
Going DOwn
May Day
May Day.
May Day
u n i q将前三个May Day看作重复副本，但是因为第4行有不同的文本，故并不认为第五行持续的May Day为其副本。u n i q将保留这一行。
命令一般格式：
$uniq -u d c -f input-file out-file
其选项含义：
-u 只显示不重复行。
-d 只显示有重复数据行，每种重复行只显示其中一行
-c 打印每一重复行出现次数。
-f n为数字，前n个域被忽略。
一些系统不识别- f选项，这时替代使用- n。

3.join用法
j o i n用来将来自两个分类文本文件的行连在一起。
下面讲述j o i n工作方式。这里有两个文件f i l e 1和f i l e 2，当然已经分类。每个文件里都有一些元素与另一个文件相关。
由于这种关系， j o i n将两个文件连在一起，这有点像修改一个主文件，使之包含两个文件里的共同元素。
文本文件中的域通常由空格或t a b键分隔，但如果愿意，可以指定其他的域分隔符。一些系统要求使用j o i n时文件域要少于2 0，
为公平起见，如果域大于2 0，应使用D B M S系统。
为有效使用j o i n，需分别将输入文件分类。
其一般格式为：
join [options] input-file1 input-file2
选项：
an n 为一数字，用于连接时从文件n中显示不匹配行。例如， - a 1显示第一个文件的不匹配行，- a 2为从第二个文件中显示不匹配行。
o n.m n为文件号，m为域号。1 . 3表示只显示文件1第三域，每个n，m必须用逗号分隔，如1 . 3，2 . 1。
j n m n为文件号，m为域号。使用其他域做连接域。
t 域分隔符。用来设置非空格或t a b键的域分隔符。例如，指定冒号做域分隔符- t：。

选择性连接
使用- o选项选择连接域。使用1 . 1显示第一个文件第一个域，2 . 2显示第二个文件第二个域，其间用逗号分隔。
join -o 1.1,2.2 names.txt town.txt

使用-jn m进行其他域连接，例如用文件1域3和文件域2做连接键，命令为：
join -j1 3 -j2 2 pers pers2

4.split用法
s p l i t用来将大文件分割成小文件。有时文件越来越大，传送这些文件时，首先将其分割可能更容易。使用v i或其他工具诸如s o r t时，如果文件对于工作缓冲区太大，也会存在一些问题。
因此有时没有选择余地，必须将文件分割成小的碎片。
s p l i t命令一般格式：
split -output_file-size input-filename output-filename
这里o u t p u t - f i l e - s i z e指的是文本文件被分割的行数。
s p l i t查看文件时，o u t p u t - f i l e - s i z e选项指定将文件按每个最多1 0 0 0行分割。
如果有个文件有38行，那么将分割成3个文件，分别有10、10、10、8行。
每个文件格式为x [ a a ]到x [ z z ]，x为文件名首字母， [ a a ]、[ z z ]为文件名剩余部分顺序字符组合。


